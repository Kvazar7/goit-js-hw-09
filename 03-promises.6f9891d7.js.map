{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAYC,SAASC,cAAc,UACnCC,EAAQF,SAASC,cAAc,kBAC/BE,EAAOH,SAASC,cAAc,iBAC9BG,EAASJ,SAASC,cAAc,mBAItC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUS,MAAAR,IAEpBG,EAAO,CAAEJ,WAAUS,MAAAR,G,GAEpBA,E,IAXPR,EAAUiB,iBAAiB,SAe3B,SAA0BC,GACxBA,EAAIC,iBAIJ,IAHA,IAAIC,GAAcjB,EAAMkB,MACpBC,GAAalB,EAAKiB,MAClBE,GAAelB,EAAOgB,MACjBG,EAAW,EAAGA,GAAYD,EAAaC,GAAY,EAC1DlB,EAAckB,EAAUJ,GACrBK,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUoB,EAAKD,EAALV,MACjBY,EAAA9B,GAAS+B,OAAOC,QAAQ,qBAAoCC,OAAfxB,EAAS,QAAYwB,OAANJ,EAAM,M,IAEnEK,OAAM,SAAAN,G,IAAGnB,EAAQmB,EAARnB,SAAU0B,EAAKP,EAALV,MAClBY,EAAA9B,GAAS+B,OAAOK,QAAQ,oBAAmCH,OAAfxB,EAAS,QAAYwB,OAANE,EAAM,M,IAErEb,GAAcE,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport \"notiflix/dist/notiflix-3.2.6.min.css\";\n\nconst submitBtn = document.querySelector('button');\nconst delay = document.querySelector('[name=\"delay\"]');\nconst step = document.querySelector('[name=\"step\"]');\nconst amount = document.querySelector('[name=\"amount\"]');\n\nsubmitBtn.addEventListener('click', onSubmitBtnClick);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n};\n\nfunction onSubmitBtnClick(evt) {\n  evt.preventDefault();\n  let delayInput = +delay.value;\n  let stepInput = +step.value;\n  let amountInput = +amount.value;\n  for (let position = 1; position <= amountInput; position += 1) {\n    createPromise(position, delayInput)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      })\n    delayInput += stepInput;\n  }\n};"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$submitBtn","document","querySelector","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","delay","addEventListener","evt","preventDefault","delayInput","value","stepInput","amountInput","position1","then","param","delay2","$parcel$interopDefault","Notify","success","concat","catch","delay3","failure"],"version":3,"file":"03-promises.6f9891d7.js.map"}